Boas práticas Api Rest
----------------------

- Correto uso dos verbos HTTP;
- Tratamento de CORS;
- Controle de segurança - Autenticação (Bearer, Oauth2);
- Validação de dados de entrada (Bean Validator);
- Registro de todos as requisições (dados de entrada e dados de saída);
- Crie uma estratégia de versionamento na sua API

- Tratamento de erro genérico;
- Não expor todos os dados. Devolva apenas os dados necessários (cuidado com os list, trate paginado). Não exponha a classe de modelo. Não devolva campos nulos. Use compreensão.
- Documentação (OpenApi/Swagger);
- Faça testes automatizados (https://cursos.alura.com.br/course/spring-boot-profiles-testes-deploy/task/81030). Procure usar um banco de dados em memoria (H2) ou então mockear a Respository.
- Externize senhas de acesso em variáveis de ambiente (https://cursos.alura.com.br/course/spring-boot-profiles-testes-deploy/task/81033)


- Rodando em um container (Docker) e sendo orchestrador para que em caso de caida levante outro e seja balanceado (Kubernetes)
- Monitore as API's (Spring Boot Actuator e Spring Boot Admin)
- Cache (lado client e server)
- Tratar multitenanty
- Para melhor a produtividade no desenvolvimento, trabalhe como profile (application-dev.properties, application-prod.properties, ...). 
Ex.:https://cursos.alura.com.br/course/spring-boot-profiles-testes-deploy/task/81026
	https://cursos.alura.com.br/course/spring-boot-profiles-testes-deploy/task/81033

- Automatize o deploy (https://cursos.alura.com.br/course/jenkins-integracao-continua/task/87079)